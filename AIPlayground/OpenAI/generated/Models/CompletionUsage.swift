//
// CompletionUsage.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
/** Usage statistics for the completion request. */

public struct CompletionUsage: Codable, JSONEncodable, Hashable {
    /** Number of tokens in the generated completion. */
    public var completionTokens: Int
    /** Number of tokens in the prompt. */
    public var promptTokens: Int
    /** Total number of tokens used in the request (prompt + completion). */
    public var totalTokens: Int
    public var completionTokensDetails: CompletionUsageCompletionTokensDetails?

    public init(completionTokens: Int, promptTokens: Int, totalTokens: Int, completionTokensDetails: CompletionUsageCompletionTokensDetails? = nil) {
        self.completionTokens = completionTokens
        self.promptTokens = promptTokens
        self.totalTokens = totalTokens
        self.completionTokensDetails = completionTokensDetails
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case completionTokens = "completion_tokens"
        case promptTokens = "prompt_tokens"
        case totalTokens = "total_tokens"
        case completionTokensDetails = "completion_tokens_details"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(completionTokens, forKey: .completionTokens)
        try container.encode(promptTokens, forKey: .promptTokens)
        try container.encode(totalTokens, forKey: .totalTokens)
        try container.encodeIfPresent(completionTokensDetails, forKey: .completionTokensDetails)
    }
}

