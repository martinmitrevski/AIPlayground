//
// VectorStoreFileObjectChunkingStrategy.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
/** The strategy used to chunk the file. */


public enum VectorStoreFileObjectChunkingStrategy: Codable, JSONEncodable, Hashable {
    case typeOtherChunkingStrategyResponseParam(OtherChunkingStrategyResponseParam)
    case typeStaticChunkingStrategyResponseParam(StaticChunkingStrategyResponseParam)
    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeOtherChunkingStrategyResponseParam(let value):
            try container.encode(value)
        case .typeStaticChunkingStrategyResponseParam(let value):
            try container.encode(value)
        }
    }


    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
                if let value = try? container.decode(OtherChunkingStrategyResponseParam.self) {
            self = .typeOtherChunkingStrategyResponseParam(value)
                } else if let value = try? container.decode(StaticChunkingStrategyResponseParam.self) {
            self = .typeStaticChunkingStrategyResponseParam(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of VectorStoreFileObjectChunkingStrategy"))
        }
    }
}

