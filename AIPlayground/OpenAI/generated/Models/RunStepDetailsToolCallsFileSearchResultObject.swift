//
// RunStepDetailsToolCallsFileSearchResultObject.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
/** A result instance of the file search. */

public struct RunStepDetailsToolCallsFileSearchResultObject: Codable, JSONEncodable, Hashable {
    /** The ID of the file that result was found in. */
    public var fileId: String
    /** The name of the file that result was found in. */
    public var fileName: String
    /** The score of the result. All values must be a floating point number between 0 and 1. */
    public var score: Double
    /** The content of the result that was found. The content is only included if requested via the include query parameter. */
    public var content: [RunStepDetailsToolCallsFileSearchResultObjectContentInner]?

    public init(fileId: String, fileName: String, score: Double, content: [RunStepDetailsToolCallsFileSearchResultObjectContentInner]? = nil) {
        self.fileId = fileId
        self.fileName = fileName
        self.score = score
        self.content = content
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fileId = "file_id"
        case fileName = "file_name"
        case score
        case content
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(fileId, forKey: .fileId)
        try container.encode(fileName, forKey: .fileName)
        try container.encode(score, forKey: .score)
        try container.encodeIfPresent(content, forKey: .content)
    }
}

