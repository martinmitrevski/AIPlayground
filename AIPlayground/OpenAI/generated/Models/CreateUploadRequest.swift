//
// CreateUploadRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct CreateUploadRequest: Codable, JSONEncodable, Hashable {
    public enum Purpose: String, Codable, CaseIterable {
        case assistants = "assistants"
        case batch = "batch"
        case fineTune = "fine-tune"
        case vision = "vision"
    }
    /** The name of the file to upload.  */
    public var filename: String
    /** The intended purpose of the uploaded file.  See the [documentation on File purposes](/docs/api-reference/files/create#files-create-purpose).  */
    public var purpose: Purpose
    /** The number of bytes in the file you are uploading.  */
    public var bytes: Int
    /** The MIME type of the file.  This must fall within the supported MIME types for your file purpose. See the supported MIME types for assistants and vision.  */
    public var mimeType: String

    public init(filename: String, purpose: Purpose, bytes: Int, mimeType: String) {
        self.filename = filename
        self.purpose = purpose
        self.bytes = bytes
        self.mimeType = mimeType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case filename
        case purpose
        case bytes
        case mimeType = "mime_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(filename, forKey: .filename)
        try container.encode(purpose, forKey: .purpose)
        try container.encode(bytes, forKey: .bytes)
        try container.encode(mimeType, forKey: .mimeType)
    }
}

