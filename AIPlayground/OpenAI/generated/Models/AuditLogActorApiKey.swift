//
// AuditLogActorApiKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
/** The API Key used to perform the audit logged action. */

public struct AuditLogActorApiKey: Codable, JSONEncodable, Hashable {
    public enum ModelType: String, Codable, CaseIterable {
        case user = "user"
        case serviceAccount = "service_account"
    }
    /** The tracking id of the API key. */
    public var id: String?
    /** The type of API key. Can be either `user` or `service_account`. */
    public var type: ModelType?
    public var user: AuditLogActorUser?
    public var serviceAccount: AuditLogActorServiceAccount?

    public init(id: String? = nil, type: ModelType? = nil, user: AuditLogActorUser? = nil, serviceAccount: AuditLogActorServiceAccount? = nil) {
        self.id = id
        self.type = type
        self.user = user
        self.serviceAccount = serviceAccount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case type
        case user
        case serviceAccount = "service_account"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(serviceAccount, forKey: .serviceAccount)
    }
}

