//
// MessageObjectContentInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public enum MessageObjectContentInner: Codable, JSONEncodable, Hashable {
    case typeMessageContentImageFileObject(MessageContentImageFileObject)
    case typeMessageContentImageUrlObject(MessageContentImageUrlObject)
    case typeMessageContentRefusalObject(MessageContentRefusalObject)
    case typeMessageContentTextObject(MessageContentTextObject)
    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeMessageContentImageFileObject(let value):
            try container.encode(value)
        case .typeMessageContentImageUrlObject(let value):
            try container.encode(value)
        case .typeMessageContentRefusalObject(let value):
            try container.encode(value)
        case .typeMessageContentTextObject(let value):
            try container.encode(value)
        }
    }


    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
                if let value = try? container.decode(MessageContentImageFileObject.self) {
            self = .typeMessageContentImageFileObject(value)
                } else if let value = try? container.decode(MessageContentImageUrlObject.self) {
            self = .typeMessageContentImageUrlObject(value)
                } else if let value = try? container.decode(MessageContentRefusalObject.self) {
            self = .typeMessageContentRefusalObject(value)
                } else if let value = try? container.decode(MessageContentTextObject.self) {
            self = .typeMessageContentTextObject(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of MessageObjectContentInner"))
        }
    }
}

