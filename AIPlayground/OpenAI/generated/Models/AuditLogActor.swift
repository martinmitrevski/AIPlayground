//
// AuditLogActor.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
/** The actor who performed the audit logged action. */

public struct AuditLogActor: Codable, JSONEncodable, Hashable {
    public enum ModelType: String, Codable, CaseIterable {
        case session = "session"
        case apiKey = "api_key"
    }
    /** The type of actor. Is either `session` or `api_key`. */
    public var type: ModelType?
    public var session: AuditLogActorSession?
    public var apiKey: AuditLogActorApiKey?

    public init(type: ModelType? = nil, session: AuditLogActorSession? = nil, apiKey: AuditLogActorApiKey? = nil) {
        self.type = type
        self.session = session
        self.apiKey = apiKey
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case session
        case apiKey = "api_key"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(session, forKey: .session)
        try container.encodeIfPresent(apiKey, forKey: .apiKey)
    }
}

